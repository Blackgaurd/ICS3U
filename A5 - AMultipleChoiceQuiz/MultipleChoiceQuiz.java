
/**
 * a multiple choice of assorted
 * programming knowledge
 *
 * modified     20210809
 * date         20210809
 *
 * @filename AMultipleChoiceQuiz.java
 * @author Bryan Deng
 * @version 1.0
 * @see unit 1 activity 5 content
 */
import java.awt.Color;

public class MultipleChoiceQuiz extends javax.swing.JFrame {

    /**
     * Creates new form AMultipleChoiceQuiz
     */
    public MultipleChoiceQuiz() {
        initComponents();

        // update page for first question
        updatePage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblQuestion = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        lblAnsChoices = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        txtAnsInput = new javax.swing.JTextField();
        lblScoreTitle = new javax.swing.JLabel();
        lblStatistics = new javax.swing.JLabel();
        lblOutput = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTitle.setText("Programming Theory Quiz");

        lblQuestion.setText("QUESTION TEXT");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblAnsChoices.setText("ANSWER CHOICES");

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblScoreTitle.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblScoreTitle.setText("SCORE");

        lblStatistics.setText("STATISTICS");

        lblOutput.setText(" ");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNext)
                            .addComponent(txtAnsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitle)
                            .addComponent(lblOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblQuestion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblAnsChoices, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblScoreTitle)
                                    .addComponent(lblStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(103, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReset)
                        .addGap(163, 163, 163))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblQuestion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAnsChoices))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblScoreTitle)
                        .addGap(18, 18, 18)
                        .addComponent(lblStatistics)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(txtAnsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblOutput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnReset))
                .addGap(18, 18, 18)
                .addComponent(btnNext)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private final String[] QUESTIONS = {
        "What year was Java created?",
        "Which one of the following is not a compiled language?",
        "In what language is a modern C++ compiler written in?",
        "To what language does C compile to?",
        "What is the time complexity of a linked list access?",
        "What data structure does a python set implement?",
        "What data structure does a C++ std::set implement?",
        "Which one of the following is part of the python standard library?",
        "In what language was NodeJS written in?"
    };
    private final String[][] ANS_CHOICES = {
        {
            "2021",
            "1995",
            "1800",
            "500 BCE"
        },
        {
            "C",
            "Go",
            "Javascript",
            "Java"
        },
        {
            "C++",
            "Python",
            "Spanish",
            "Lua"
        },
        {
            "C++",
            "HTML",
            "Assembly",
            "French"
        },
        {
            "O(1)",
            "O(N!)",
            "O(RANGE)",
            "O(N)"
        },
        {
            "Hash Set",
            "SQL",
            "Tree Set",
            "Google Search"
        },
        {
            "Bing Search",
            "Tree Set",
            "Hash Set",
            "Binary Search"
        },
        {
            "numpy",
            "scipy",
            "requests",
            "turtle"
        },
        {
            "Japanese",
            "C++",
            "CSS",
            "C#"
        }
    };
    final char[] ANSWERS = {'B', 'C', 'A', 'C', 'D', 'A', 'B', 'D', 'B'};
    final int NUM_QUESTIONS = QUESTIONS.length;

    // global variables
    int questionIndex = 0, correctAnswers = 0;
    boolean finishedCurQuestion = false;
    
    private void updateQuestion() {
        // method to update question text
        lblQuestion.setText(QUESTIONS[questionIndex]);
    }

    private void updateAnswerChoices() {
        // method to write answer choices
        // in answer choices label
        // using html tags to format

        // "<html>" tag for html format
        // "<br/>" tag for new line
        // loop through answer choices and
        // concat to text field
        String choices = "<html>";
        char choiceChar = 'A';
        for (String choice : ANS_CHOICES[questionIndex]) {
            choices += String.format("%c. %s<br/>", choiceChar, choice);
            choiceChar++;
        }
        choices += "<html>";
        lblAnsChoices.setText(choices);
    }

    private void updateStatistics() {
        // method to update statistics text
        // (questions answered, questions correct, score percentage)
        
        String statisticsTemplate = "<html>Question: %d/%d<br/>Correct: %d/%d<br/>Score: %.1f%%<html>";

        int questionsAnswered = questionIndex;
        double scorePercentage = questionsAnswered == 0
                ? 100.0
                : (double) correctAnswers / questionsAnswered * 100.0;
        
        String formattedStatistics = String.format(
                statisticsTemplate,
                questionsAnswered + 1,
                NUM_QUESTIONS,
                correctAnswers,
                questionsAnswered,
                Math.round(scorePercentage * 10.0) / 10.0
        );
        lblStatistics.setText(formattedStatistics);
    }

    private void updatePage() {
        updateQuestion();
        updateAnswerChoices();
        updateStatistics();

        txtAnsInput.setText(" ");

        lblOutput.setText(" ");
    }

    private char handleInput() {
        String input = txtAnsInput.getText().trim();

        lblOutput.setText(" ");

        if (input.length() != 1) {
            lblOutput.setForeground(Color.red);
            lblOutput.setText("Please enter a single character.");
            return (char) -1;
        }
        
        char charInput = Character.toUpperCase(input.charAt(0));
        if (charInput < 'A' || charInput > 'D') {
            lblOutput.setForeground(Color.red);
            lblOutput.setText("Please pick an answer from A-D.");
            return (char) -1;
        }
        
        return charInput;
    }

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if (finishedCurQuestion) {
            return;
        }

        char answerInput = handleInput();
        if (answerInput == (char) -1) {
            return;
        }

        finishedCurQuestion = true;
        if (answerInput == ANSWERS[questionIndex]) {
            correctAnswers++;

            lblOutput.setForeground(Color.green);
            lblOutput.setText("Correct! Click next to continue.");
        } else {
            lblOutput.setForeground(Color.red);
            lblOutput.setText(String.format(
                    "Incorrect, the answer was %c! Click next to continue.",
                    ANSWERS[questionIndex]
            ));
        }
        
        updateStatistics();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // if current question has not yet
        // been answered, do not continue
        if (!finishedCurQuestion) {
            lblOutput.setForeground(Color.red);
            lblOutput.setText("Please submit the question before continuing.");
            return;
        }

        questionIndex++;
        if (questionIndex >= NUM_QUESTIONS) {
            lblOutput.setForeground(Color.green);
            lblOutput.setText("That was the last question, good job!");
            updateStatistics();
            questionIndex = NUM_QUESTIONS - 1;
        } else {
            finishedCurQuestion = false;
            updatePage();
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        questionIndex = 0;
        correctAnswers = 0;
        finishedCurQuestion = false;
        updatePage();
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultipleChoiceQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultipleChoiceQuiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblAnsChoices;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblScoreTitle;
    private javax.swing.JLabel lblStatistics;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAnsInput;
    // End of variables declaration//GEN-END:variables
}
