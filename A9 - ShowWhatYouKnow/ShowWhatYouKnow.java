
/**
 * multiple choice quiz on
 * random trivia
 *
 * modified     20210812
 * date         20210812
 *
 * @filename ShowWhatYouKnow.java
 * @author Bryan Deng
 * @version 1.0
 * @see unit 1 activity 3 content
 */
import java.awt.Color;

public class ShowWhatYouKnow extends javax.swing.JFrame {

    /**
     * Creates new form AMultipleChoiceQuiz
     */
    public ShowWhatYouKnow() {
        initComponents();

        // update page for first question
        updatePage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblQuestion = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        lblAnsChoices = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        txtAnsInput = new javax.swing.JTextField();
        lblScoreTitle = new javax.swing.JLabel();
        lblStatistics = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        lblOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTitle.setText("Assorted Trivia Quiz");

        lblQuestion.setText("QUESTION TEXT");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblAnsChoices.setText("ANSWER CHOICES");

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblScoreTitle.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblScoreTitle.setText("SCORE");

        lblStatistics.setText("STATISTICS");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblOutput.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSubmit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnReset))
                            .addComponent(btnNext))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAnsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblQuestion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblAnsChoices, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblScoreTitle)
                                    .addComponent(lblStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(140, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblQuestion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAnsChoices))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblScoreTitle)
                        .addGap(18, 18, 18)
                        .addComponent(lblStatistics)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(txtAnsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblOutput)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnReset))
                .addGap(18, 18, 18)
                .addComponent(btnNext)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private class MCQuestion {

        String question;
        String ansChoices[];
        char ans;

        public MCQuestion(String question, String ansChoices[], char ans) {
            this.question = question;
            this.ansChoices = ansChoices;
            this.ans = ans;
        }
    }

    final MCQuestion QUESTIONS[] = {
        new MCQuestion(
        "How long is the great wall of China?",
        new String[]{
            "21,196km",
            "19,121km",
            "22,094km",
            "12,345km"
        },
        'A'
        ),
        new MCQuestion(
        "Where is the first McDonald's?",
        new String[]{
            "Texas",
            "Moscow",
            "California",
            "Washington"
        },
        'C'
        ),
        new MCQuestion(
        "How small is the world's smallest frog?",
        new String[]{
            "1.01cm",
            "0.77mm",
            "1.22cm",
            "1.13cm"
        },
        'B'
        ),
        new MCQuestion(
        "What is the world's most expensive spice?",
        new String[]{
            "cinnamon",
            "black pepper",
            "vanilla",
            "saffron"
        },
        'D'
        ),
        new MCQuestion(
        "When was basketball invented?",
        new String[]{
            "1904",
            "1909",
            "1891",
            "1895"
        },
        'C'
        ),
        new MCQuestion(
        "What is the average height of a NHL player?",
        new String[]{
            "6ft 1in",
            "6ft 3in",
            "6ft 0in",
            "6ft 2in"
        },
        'A'
        ),
        new MCQuestion(
        "What is the newest country in the world as of 2021?",
        new String[]{
            "Canada",
            "Kosovo",
            "Palau",
            "South Sudan"
        },
        'D'
        ),
        new MCQuestion(
        "What is the parent company of Audi?",
        new String[]{
            "Toyota",
            "Volkswagen",
            "Mercedes Benz",
            "Nissan"
        },
        'B'
        ),
        new MCQuestion(
        "What tech company did Jack Dorsy start?",
        new String[]{
            "Google",
            "Twitter",
            "Shopify",
            "Spotify"
        },
        'B'
        ),
        new MCQuestion(
        "Who is the shortest NBA player of all time?",
        new String[]{
            "Muggsy Bogues",
            "Earl Boykins",
            "Greg Grant",
            "Monte Towe"
        },
        'A'
        )};
    final int NUM_QUESTIONS = QUESTIONS.length;

    // global variables
    int questionIndex = 0, correctAnswers = 0;
    boolean finishedCurQuestion = false;

    private void updateQuestion() {
        lblQuestion.setText(QUESTIONS[questionIndex].question);
    }

    private void updateAnsChoices() {
        // use html for new line character alternative
        String ansChoicesFmt = "<html>";
        char curChoice = 'A';

        for (String curAns : QUESTIONS[questionIndex].ansChoices) {
            ansChoicesFmt += String.format("%c. %s<br/>", curChoice, curAns);
            curChoice++;
        }

        ansChoicesFmt += "</html>";
        lblAnsChoices.setText(ansChoicesFmt);
    }

    private void updateStatistics() {
        String statisticsTemplate = "<html>Question: %d/%d<br/>Correct: %d/%d<br/>Score: %.1f%%<html>";

        int questionsAnswered = questionIndex;
        double scorePercentage = questionsAnswered == 0
                ? 100.0
                : (double) correctAnswers / questionsAnswered * 100.0;

        String formattedStatistics = String.format(
                statisticsTemplate,
                questionsAnswered + 1,
                NUM_QUESTIONS,
                correctAnswers,
                questionsAnswered,
                Math.round(scorePercentage * 10.0) / 10.0
        );
        lblStatistics.setText(formattedStatistics);
    }

    private void updatePage() {
        updateQuestion();
        updateAnsChoices();
        updateStatistics();

        lblOutput.setText(" ");
        txtAnsInput.setText(" ");
    }

    private char handleInput() {
        String input = txtAnsInput.getText().trim();

        lblOutput.setText(" ");

        if (input.length() != 1) {
            lblOutput.setForeground(Color.red);
            lblOutput.setText("Please enter a single character.");
            return (char) -1;
        }

        char charInput = Character.toUpperCase(input.charAt(0));
        if (charInput < 'A' || charInput > 'D') {
            lblOutput.setForeground(Color.red);
            lblOutput.setText("Please pick an answer from A-D.");
            return (char) -1;
        }
        return charInput;
    }

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if (finishedCurQuestion) {
            return;
        }

        char ansInput = handleInput();
        if (ansInput == (char) -1) {
            return;
        }

        finishedCurQuestion = true;
        if (ansInput == QUESTIONS[questionIndex].ans) {
            correctAnswers++;

            lblOutput.setForeground(Color.green);
            lblOutput.setText("Correct! Click next to continue.");
        } else {
            lblOutput.setForeground(Color.red);
            lblOutput.setText(String.format(
                    "Incorrect, the answer was %c! Click next to continue.",
                    QUESTIONS[questionIndex].ans
            ));
        }

        updateStatistics();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // if current question has not yet
        // been answered, do not continue
        if (!finishedCurQuestion) {
            lblOutput.setForeground(Color.red);
            lblOutput.setText("Please submit the question before continuing.");
            return;
        }

        questionIndex++;
        if (questionIndex >= NUM_QUESTIONS) {
            lblOutput.setForeground(Color.green);
            lblOutput.setText("That was the last question, good job!");
            updateStatistics();
            questionIndex = NUM_QUESTIONS - 1;
        } else {
            finishedCurQuestion = false;
            updatePage();
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        questionIndex = 0;
        correctAnswers = 0;
        finishedCurQuestion = false;
        updatePage();
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowWhatYouKnow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowWhatYouKnow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowWhatYouKnow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowWhatYouKnow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowWhatYouKnow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblAnsChoices;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblScoreTitle;
    private javax.swing.JLabel lblStatistics;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAnsInput;
    // End of variables declaration//GEN-END:variables
}
