
/**
 * factorial, fibonacci and prime number finder
 *
 * modified 20210822
 * date 	20210818
 *
 * @filename AlgorithmDesign.java
 * @author Bryan Deng
 * @version 1.0
 * @see unit 4 activity 2 content
 */

import java.awt.Color;

public class AlgorithmDesign extends javax.swing.JFrame {

    /**
     * Creates new form AlgorithmDesign
     */
    public AlgorithmDesign() {
        initComponents();

        // initiate isComposite array
        initPrimes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblFactorialPrompt = new javax.swing.JLabel();
        txtFactorial = new javax.swing.JTextField();
        btnFactorial = new javax.swing.JButton();
        lblFactorialOutput = new javax.swing.JLabel();
        lblPrimePrompt = new javax.swing.JLabel();
        txtPrime = new javax.swing.JTextField();
        btnPrime = new javax.swing.JButton();
        lblPrimeOutput = new javax.swing.JLabel();
        lblFibPrompt = new javax.swing.JLabel();
        txtFib = new javax.swing.JTextField();
        btnFib = new javax.swing.JButton();
        lblFibOutput = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        lblTitle.setText("~~ NUMBERS ~~");

        lblFactorialPrompt.setText("Enter a number and click the button to find its factorial:");

        btnFactorial.setText("Factorial");
        btnFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFactorialActionPerformed(evt);
            }
        });

        lblFactorialOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFactorialOutput.setText("...");

        lblPrimePrompt.setText("Enter a number and click the button to determine whether or not it is a prime number:");

        btnPrime.setText("Prime");
        btnPrime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeActionPerformed(evt);
            }
        });

        lblPrimeOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrimeOutput.setText("...");

        lblFibPrompt.setText("Enter a number and click the button to see the corresponding Fibonacci Number:");

        btnFib.setText("Fibonacci");
        btnFib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFibActionPerformed(evt);
            }
        });

        lblFibOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFibOutput.setText("...");

        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(btnFactorial)
                        .addGap(71, 71, 71)
                        .addComponent(lblFactorialOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblFactorialPrompt))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPrimePrompt))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtPrime, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnPrime)
                        .addGap(73, 73, 73)
                        .addComponent(lblPrimeOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblFibPrompt))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtFib, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(btnFib)
                        .addGap(59, 59, 59)
                        .addComponent(lblFibOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReset))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(lblTitle)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(lblFactorialPrompt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFactorial)
                    .addComponent(lblFactorialOutput))
                .addGap(18, 18, 18)
                .addComponent(lblPrimePrompt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrime)
                    .addComponent(lblPrimeOutput))
                .addGap(18, 18, 18)
                .addComponent(lblFibPrompt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFib)
                    .addComponent(lblFibOutput))
                .addGap(18, 18, 18)
                .addComponent(btnReset)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFactorialActionPerformed
        int input;
        try {
            input = inputInt(txtFactorial, lblFactorialOutput);
        } catch (Exception e) {
            return;
        }

        if (input < 0) {
            lblFactorialOutput.setForeground(Color.red);
            lblFactorialOutput.setText("Error");
            return;
        }

        if (input >= factorialMax) {
            lblFactorialOutput.setForeground(Color.red);
            lblFactorialOutput.setText("Input too large!");
            return;
        }

        // 0! = 1
        int factorial = 1;
        for (int i = 1; i <= input; i++) {
            factorial *= i;
        }
        lblFactorialOutput.setForeground(Color.black);
        lblFactorialOutput.setText(String.valueOf(factorial));
    }//GEN-LAST:event_btnFactorialActionPerformed

    private void btnPrimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeActionPerformed
        int input;
        try {
            input = inputInt(txtPrime, lblPrimeOutput);
        } catch (Exception e) {
            return;
        }

        if (input >= primeMax) {
            lblPrimeOutput.setForeground(Color.red);
            lblPrimeOutput.setText("Input too large!");
            return;
        }

        String output;
        if (input < 0 || isComposite[input]) {
            output = "no";
        } else {
            output = "yes";
        }
        lblPrimeOutput.setForeground(Color.black);
        lblPrimeOutput.setText(output);
    }//GEN-LAST:event_btnPrimeActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtFactorial.setText("");
        txtPrime.setText("");
        txtFib.setText("");

        lblFactorialOutput.setForeground(Color.black);
        lblFactorialOutput.setText("...");
        lblPrimeOutput.setForeground(Color.black);
        lblPrimeOutput.setText("...");
        lblFibOutput.setForeground(Color.black);
        lblFibOutput.setText("...");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnFibActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFibActionPerformed
        int input;
        try {
            input = inputInt(txtFib, lblFibOutput);
        } catch (Exception e) {
            return;
        }

        if (input < 0) {
            lblFibOutput.setForeground(Color.red);
            lblFibOutput.setText("Error");
            return;
        }

        if (input >= fibMax) {
            lblFibOutput.setForeground(Color.red);
            lblFibOutput.setText("Input too large!");
            return;
        }

        lblFibOutput.setForeground(Color.black);
        lblFibOutput.setText(String.valueOf(fib(input)));
    }//GEN-LAST:event_btnFibActionPerformed

    // inputs above max values will either cause
    // integer overflow or time complexity issues
    final int factorialMax = 13;

    final int primeMax = (int) 5e6 + 3;
    boolean[] isComposite = new boolean[primeMax];

    final int fibMax = 47;
    int[] fibMem = new int[fibMax];

    private void initPrimes() {
        // sieve of Eratosthenes

        // edge cases
        isComposite[0] = true;
        isComposite[1] = true;

        // sieve number up to primeMax - 1
        for (int i = 4; i < primeMax; i += 2) {
            isComposite[i] = true;
        }
        for (int start = 3; start < primeMax; start += 2) {
            if (!isComposite[start]) {
                for (int i = start * 2; i < primeMax; i += start) {
                    isComposite[i] = true;
                }
            }
        }
    }

    private int fib(int n) {
        // returns nth fibonacci number

        // base cases
        if (n == 0) {
            return 0;
        }
        if (n <= 2) {
            return 1;
        }

        // if nth number has been previously calculated
        if (fibMem[n] != 0) {
            return fibMem[n];
        }

        fibMem[n] = fib(n - 1) + fib(n - 2);
        return fibMem[n];
    }

    private int inputInt(javax.swing.JTextField input, javax.swing.JLabel output) throws Exception {
        String inputString = input.getText().trim();

        int parsed;
        try {
            parsed = Integer.parseInt(inputString);
            return parsed;
        } catch (Exception e) {
            output.setForeground(Color.red);
            output.setText("Error");
            throw new Exception();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlgorithmDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlgorithmDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlgorithmDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlgorithmDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlgorithmDesign().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFactorial;
    private javax.swing.JButton btnFib;
    private javax.swing.JButton btnPrime;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel lblFactorialOutput;
    private javax.swing.JLabel lblFactorialPrompt;
    private javax.swing.JLabel lblFibOutput;
    private javax.swing.JLabel lblFibPrompt;
    private javax.swing.JLabel lblPrimeOutput;
    private javax.swing.JLabel lblPrimePrompt;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFactorial;
    private javax.swing.JTextField txtFib;
    private javax.swing.JTextField txtPrime;
    // End of variables declaration//GEN-END:variables
}
